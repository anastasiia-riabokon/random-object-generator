export const availableTags = [
  "event",
  "attendees",
  "permissions",
  "form",
  "workflow",
  "schedule",
  "tags",
  "priority",
  "external",
  "channel",
  "date",
  "location",
  "user",
  "access",
  "modify",
  "view",
  "execute",
  "sign",
  "formValue",
  "notification",
];

export const availableTitle = [
  "Annual Conference",
  "Product Launch Event",
  "Team Meeting",
  "Marketing Strategy Discussion",
  "Project Kickoff",
  "Quarterly Review",
  "Workshop on Innovation",
  "Client Presentation",
  "Training Session",
  "Networking Event",
  "Product Development Update",
  "Leadership Seminar",
  "Team Building Activity",
  "Business Symposium",
  "Annual Shareholders Meeting",
  "Sales Strategy Session",
  "Executive Roundtable",
  "Customer Appreciation Event",
  "Technology Summit",
  "Creative Workshop",
];

export const loremWords = [
  "Lorem",
  "ipsum",
  "dolor",
  "sit",
  "amet",
  "consectetur",
  "adipiscing",
  "elit",
  "sed",
  "do",
  "eiusmod",
  "tempor",
  "incididunt",
  "ut",
  "labore",
  "et",
  "dolore",
  "magna",
  "aliqua",
  "Ut",
  "enim",
  "ad",
  "minim",
  "veniam",
  "quis",
  "nostrud",
  "exercitation",
  "ullamco",
  "laboris",
  "nisi",
  "ut",
  "aliquip",
  "ex",
  "ea",
  "commodo",
  "consequat",
  "Duis",
  "aute",
  "irure",
  "dolor",
  "in",
  "reprehenderit",
  "in",
  "voluptate",
  "velit",
  "esse",
  "cillum",
  "dolore",
  "eu",
  "fugiat",
  "nulla",
  "pariatur",
  "Excepteur",
  "sint",
  "occaecat",
  "cupidatat",
  "non",
  "proident",
  "sunt",
  "in",
  "culpa",
  "qui",
  "officia",
  "deserunt",
  "mollit",
  "anim",
  "id",
  "est",
  "laborum",
];

export const mockSchema = {
  $schema: "http://json-schema.org/draft-07/schema#",
  definitions: {
    attendees: {
      type: "object",
      $id: "#attendees",
      properties: {
        userId: {
          type: "integer",
        },
        access: {
          enum: ["view", "modify", "sign", "execute"],
        },
        formAccess: {
          enum: ["view", "execute", "execute_view"],
        },
      },
      required: ["userId", "access"],
    },
  },
  type: "object",
  properties: {
    id: {
      anyOf: [{type: "string"}, {type: "integer"}],
    },
    title: {
      type: "string",
    },
    description: {
      type: "string",
    },
    startDate: {
      type: "integer",
    },
    endDate: {
      type: "integer",
    },
    attendees: {
      type: "array",
      items: {$ref: "#attendees"},
      default: [],
    },
    parentId: {
      anyOf: [{type: "null"}, {type: "string"}, {type: "integer"}],
    },
    locationId: {
      anyOf: [{type: "null"}, {type: "integer"}],
    },
    process: {
      anyOf: [
        {type: "null"},
        {
          type: "string",
          pattern:
            "https:\\/\\/[a-z]+\\.corezoid\\.com\\/api\\/1\\/json\\/public\\/[0-9]+\\/[0-9a-zA-Z]+",
        },
      ],
    },
    readOnly: {
      type: "boolean",
    },
    priorProbability: {
      anyOf: [{type: "null"}, {type: "integer", minimum: 0, maximum: 100}],
    },
    channelId: {
      anyOf: [{type: "null"}, {type: "integer"}],
    },
    externalId: {
      anyOf: [{type: "null"}, {type: "string"}],
    },
    tags: {
      type: "array",
      items: {type: "string"},
    },
    form: {
      type: "object",
      properties: {
        id: {type: "integer"},
        viewModel: {type: "object"},
      },
      required: ["id"],
    },
    formValue: {
      type: "object",
    },
  },
  required: ["id", "title", "description", "startDate", "endDate", "attendees"],
};
